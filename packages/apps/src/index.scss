@import '@openfin-react/common/styles/index.scss';

body {
  background-color: var(--kea-background-color);
  color: var(--kea-on-background-color);
  margin: 0;
  font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',
  'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: normal;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

:root {
  --app-header-height: 1.7rem;
  --app-footer-height: 1rem;

  #app {
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .App-header {
    margin: 0;
    flex: 0 1 auto;
    align-self: stretch;
    display: flex;
    justify-content: space-between;
    flex-flow: row nowrap;
    align-items: center;
    background-color: var(--dark-gray1);
    border-style: solid;
    border-color: var(--dark-gray5);
    border-width: 0.5px 0;
    width: 100%;
    position: relative;
    height: var(--app-header-height);
    z-index: 1;
    overflow: hidden;
    gap: 16px;

    .app-header-left-section {
    }

    .app-header-center-section {
      overflow: hidden;
      flex: 1 1 auto;
      color: var(--blue5);
      font-weight: bold;

      // from blueprint docs, must center EditableText component using flex box
      // if using text-align: center, an infinite loop occurs in the browser
      // https://blueprintjs.com/docs/#core/components/editable-text
      display: flex;
      flex-direction: row;
      justify-content: center;

      .title {
        text-overflow: ellipsis;
        white-space: nowrap;
        min-width: 0;
        overflow: hidden;

        .bp4-editable-text-content {
          text-align: center;
          padding: 0 8px;
        }

        input::placeholder {
          color: var(--gray3);
        }
      }
    }

    .config-button {
      &:focus {
        outline: none;
      }
    }

    Button {
      .icon {
        margin-top: 0;
        padding: 5px;
        vertical-align: top;
      }
    }
  }

  .app-footer {
    background-color: var(--dark-app-background-color);
    font-size: 0.6rem;
    display: flex;
    flex-flow: row nowrap;
    align-self: stretch;
    justify-content: flex-end;
    gap: 0.01rem;
    min-height: var(--app-footer-height);
    max-height: var(--app-footer-height);
    height: var(--app-footer-height);

    .of-status {
      border-radius: 0.1rem;
      background-color: var(--dark-gray5);
      margin: 0.01rem 0.02rem;
      padding: 0.05rem 0.2rem;
    }

    .of-on {
      @extend .of-status;
      color: var(--green5);
    }

    .of-off {
      @extend .of-status;
      color: var(--red5);
    }

    .pid {
      @extend .of-status;
      padding: 0.05rem 0.3rem;
      white-space: nowrap;
    }
  }

  .e7-label {
    margin-bottom: 0.5rem !important;
    color: var(--label-foreground-color);
  }

  .sim-launch-status {
    border: 1px solid var(--red1);
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    padding: 2rem;

    p {
      text-align: center;
      color: var(--gray4);
      font-size: var(--font-size-large);
    }
  }

  .clone-view-tooltip-portal {
    .popover {
      .bp4-popover2-content {
        .tooltip-container {
          .tooltip-text {
            margin: auto;
            white-space: nowrap;
          }
        }
      }
    }
  }
}
